openapi: 3.0.0
info:
  description: Express DataTransferManagement API Server
  version: 1.0.0
  title: Data Access API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Data
    description: Get data from the server.
  - name: Authenticate
    description: Get access token required for retrieving data.
paths:
  '/{data}':
    post:
      tags:
        - Data
      summary: Get data
      description: ''
      parameters:
        - in: path
          name: data
          schema:
            type: string
          required: true
          description: Name of the resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - block_id
                - block_ack
              properties:
                block_id:
                  type: string
                block_ack:
                  type: string
        description: In the first call block_id and block_ack should have the value null
      responses:
        '200':
          description: >-
            Response that contains the block id, the next
            block id, cipherblock and poO
          content: 
            application/json: 
              schema: 
                  $ref: "#/components/schemas/DataAccessResponse"
        '401':
          description: Access token is missing or invalid
        '404':
          description: File not found
        '500':
          description: Internal server error
      security:
        - bearerAuth: []
  /validatePoR:
    post:
      tags:
        - Data
      summary: Validate proof of receipt
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - poR
              properties:
                poR:
                  type: string
        description: Send the proof of receipt generated by the client
      responses:
        '200':
          description: >-
            Proof of receipt validated
          content: 
            application/json: 
              schema: 
                  $ref: "#/components/schemas/JWK"
  /createInvoice:
    post:
      tags:
        - Data
      summary: Create invoice call
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fromDate
                - toDate
              properties:
                fromDate:
                  type: string
                toDate:
                  type: string
        description: Create invoice call
      responses:
        '200':
          description: >-
            Invoice call created
          content: 
            application/json: 
              schema: 
                  $ref: "#/components/schemas/Invoice"
  /oidc/login/consumer:
    get:
      tags:
        - Authenticate
      summary: Authenticate as consumer
      parameters: []
      responses:
        '200':
          description: >-
            a QR code is sent and should be scanned with a mobile phone using
            uPort to get the access token. For testing it is easier to just
            connect to this endpoint directly from a browser
  /oidc/login/provider:
    get:
      tags:
        - Authenticate
      summary: Authenticate as provider
      parameters: []
      responses:
        '200':
          description: >-
            a QR code is sent and should be scanned with a mobile phone using
            uPort to get the access token. For testing it is easier to just
            connect to this endpoint directly from a browser
components:
  schemas: 
    DataAccessResponse: 
      title: DataAccessResponse
      type: object
      properties: 
        block_id: 
          type: string
        next_block_id: 
          type: string
        cipherblock: 
          type: string
        poO: 
          type: string
    JWK:
      title: JWK
      type: object
      properties:
        kty:
          type: string
        k:
          type: string
        kid:
          type: string
        alg:
          type: string
    Invoice:
      title: Invoice
      type: object
      properties:
        ConsumerID:
          type: string
        CompanyName:
          type: string
        VAT:
          type: string
        ContractID:
          type: string
        NumBlock:
          type: string
        BlockSize:
          type: string
        BlockPrice:
          type: string
        TotalAmount:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
servers:
  - url: 'http://95.211.3.244:3100'
    variables: {}
